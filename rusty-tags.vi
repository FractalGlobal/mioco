!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^        struct A<'a>(&'a mut bool);$/;"	s
AWAKEN	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const AWAKEN: Token = Token(usize::MAX);$/;"	c
AsRawFd for Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl AsRawFd for Io {$/;"	i
AsRawFd for PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl AsRawFd for PipeReader {$/;"	i
AsRawFd for PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl AsRawFd for PipeWriter {$/;"	i
AsRawFd for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl AsRawFd for TcpListener {$/;"	i
AsRawFd for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl AsRawFd for TcpListener {$/;"	i
AsRawFd for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl AsRawFd for TcpStream {$/;"	i
AsRawFd for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl AsRawFd for TcpStream {$/;"	i
AsRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^impl AsRawFd for UdpSocket {$/;"	i
AsRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^impl AsRawFd for UdpSocket {$/;"	i
AsRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^impl AsRawFd for UdpSocket {$/;"	i
AsRawFd for UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl AsRawFd for UnixListener {$/;"	i
AsRawFd for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl AsRawFd for UnixSocket {$/;"	i
AsRawFd for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl AsRawFd for UnixSocket {$/;"	i
AsRawFd for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl AsRawFd for UnixStream {$/;"	i
AtomicState	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl AtomicState {$/;"	i
AtomicState	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^struct AtomicState {$/;"	s
Awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^    impl Awakener {$/;"	i
Awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^    pub struct Awakener {$/;"	s
Awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^impl Awakener {$/;"	i
Awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^pub struct Awakener {$/;"	s
AwakenerInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^struct AwakenerInner {$/;"	s
Binding	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl Binding {$/;"	i
Binding	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^pub struct Binding {$/;"	s
BoxFnOnce	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^impl<Args, Result> BoxFnOnce<Args, Result> {$/;"	i
BoxFnOnce	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^pub struct BoxFnOnce<Arguments, Result = ()> (Box<FnBox<Arguments, Result>>);$/;"	s
BufferPool	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/buffer_pool.rs	/^impl BufferPool {$/;"	i
BufferPool	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/buffer_pool.rs	/^pub struct BufferPool {$/;"	s
Builder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl Builder {$/;"	i
Builder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub struct Builder {$/;"	s
Clone for FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^impl<T> Clone for FromRawArc<T> {$/;"	i
Clone for RegistrationInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Clone for RegistrationInner {$/;"	i
Clone for SelectorId	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Clone for SelectorId {$/;"	i
Clone for Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> Clone for Sender<T> {$/;"	i
Clone for Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl<M> Clone for Sender <M> {$/;"	i
Clone for SenderCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl Clone for SenderCtl {$/;"	i
Clone for SyncSender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> Clone for SyncSender<T> {$/;"	i
Cmsg	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^            struct Cmsg {$/;"	s
Config	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^struct Config {$/;"	s
Context	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^impl Context {$/;"	i
Context	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^pub struct Context(&'static c_void);$/;"	s
ContextFn	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^pub type ContextFn = extern "C" fn(t: Transfer) -> !;$/;"	T
DROPPED_MASK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const DROPPED_MASK: usize = 1 << DROPPED_SHIFT;$/;"	c
DROPPED_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const DROPPED_SHIFT: usize = 17;$/;"	c
Default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl<'a> Default for &'a IoVec {$/;"	i
Default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl<'a> Default for &'a mut IoVec {$/;"	i
Default for Builder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl Default for Builder {$/;"	i
Default for Config	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl Default for Config {$/;"	i
Default for FixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Default for FixedSizeStack {$/;"	i
Default for ProtectedFixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Default for ProtectedFixedSizeStack {$/;"	i
Default for Timer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl<T> Default for Timer<T> {$/;"	i
Dequeue	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^enum Dequeue {$/;"	g
Deref for FixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Deref for FixedSizeStack {$/;"	i
Deref for FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^impl<T> Deref for FromRawArc<T> {$/;"	i
Deref for ProtectedFixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Deref for ProtectedFixedSizeStack {$/;"	i
DlSym	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/dlsym.rs	/^impl<F> DlSym<F> {$/;"	i
DlSym	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/dlsym.rs	/^pub struct DlSym<F> {$/;"	s
Drop for A	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^        impl<'a> Drop for A<'a> {$/;"	i
Drop for FixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Drop for FixedSizeStack {$/;"	i
Drop for FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^impl<T> Drop for FromRawArc<T> {$/;"	i
Drop for ProtectedFixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Drop for ProtectedFixedSizeStack {$/;"	i
Drop for ReadinessQueueInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Drop for ReadinessQueueInner {$/;"	i
Drop for Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Drop for Registration {$/;"	i
Drop for RegistrationInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Drop for RegistrationInner {$/;"	i
Drop for Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^impl Drop for Selector {$/;"	i
Drop for Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^impl Drop for Selector {$/;"	i
Drop for SenderCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl Drop for SenderCtl {$/;"	i
Drop for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl Drop for TcpListener {$/;"	i
Drop for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl Drop for TcpStream {$/;"	i
Drop for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^impl Drop for UdpSocket {$/;"	i
EMPTY	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^const EMPTY: Token = Token(usize::MAX);$/;"	c
EPOLLONESHOT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^const EPOLLONESHOT: libc::c_int = 0x40000000;$/;"	c
EPOLLRDHUP	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^const EPOLLRDHUP: libc::c_int = 0x00002000;$/;"	c
ERROR	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^const ERROR: usize    = 0b0100;$/;"	c
ERROR	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^const ERROR: usize = 0b0100;$/;"	c
Entry	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl<T> Entry<T> {$/;"	i
Entry	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^struct Entry<T> {$/;"	s
EntryLinks	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^struct EntryLinks {$/;"	s
Event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl Event {$/;"	i
Event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub struct Event {$/;"	s
EventLoop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl<H: Handler> EventLoop<H> {$/;"	i
EventLoop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^pub struct EventLoop<H: Handler> {$/;"	s
EventLoopBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl EventLoopBuilder {$/;"	i
EventLoopBuilder	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^pub struct EventLoopBuilder {$/;"	s
Evented	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub trait Evented {$/;"	t
Evented for Awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^    impl Evented for Awakener {$/;"	i
Evented for Awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^impl Evented for Awakener {$/;"	i
Evented for EventedFd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/eventedfd.rs	/^impl<'a> Evented for EventedFd<'a> {$/;"	i
Evented for Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl Evented for Io {$/;"	i
Evented for PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Evented for PipeReader {$/;"	i
Evented for PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Evented for PipeWriter {$/;"	i
Evented for Receiver	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> Evented for Receiver<T> {$/;"	i
Evented for ReceiverCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl Evented for ReceiverCtl {$/;"	i
Evented for Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Evented for Registration {$/;"	i
Evented for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl Evented for TcpListener {$/;"	i
Evented for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl Evented for TcpListener {$/;"	i
Evented for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl Evented for TcpListener {$/;"	i
Evented for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl Evented for TcpStream {$/;"	i
Evented for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl Evented for TcpStream {$/;"	i
Evented for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl Evented for TcpStream {$/;"	i
Evented for Timer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl<T> Evented for Timer<T> {$/;"	i
Evented for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^impl Evented for UdpSocket {$/;"	i
Evented for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^impl Evented for UdpSocket {$/;"	i
Evented for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^impl Evented for UdpSocket {$/;"	i
Evented for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^impl Evented for UdpSocket {$/;"	i
Evented for UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Evented for UnixListener {$/;"	i
Evented for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Evented for UnixSocket {$/;"	i
Evented for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl Evented for UnixSocket {$/;"	i
Evented for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Evented for UnixStream {$/;"	i
EventedFd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/eventedfd.rs	/^pub struct EventedFd<'a>(pub &'a RawFd);$/;"	s
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Events {$/;"	i
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub struct Events {$/;"	s
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^impl Events {$/;"	i
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^pub struct Events {$/;"	s
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^impl Events {$/;"	i
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^pub struct Events {$/;"	s
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl Events {$/;"	i
Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^pub struct Events {$/;"	s
FILE_SKIP_COMPLETION_PORT_ON_SUCCESS	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^    const FILE_SKIP_COMPLETION_PORT_ON_SUCCESS: winapi::UCHAR = 1;$/;"	c
FILE_SKIP_SET_EVENT_ON_HANDLE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^    const FILE_SKIP_SET_EVENT_ON_HANDLE: winapi::UCHAR = 2;$/;"	c
Family	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^enum Family {$/;"	g
FixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl FixedSizeStack {$/;"	i
FixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^pub struct FixedSizeStack(Stack);$/;"	s
FnBox	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/traits.rs	/^pub trait FnBox<Arguments, Result> {$/;"	t
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl<'a> From<&'a [u8]> for &'a IoVec {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl<'a> From<&'a mut [u8]> for &'a mut IoVec {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^impl<'a> From<&'a [u8]> for &'a IoVec {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^impl<'a> From<&'a mut [u8]> for &'a mut IoVec {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^impl<'a> From<&'a [u8]> for &'a IoVec {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^impl<'a> From<&'a mut [u8]> for &'a mut IoVec {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> From<mpsc::SendError<T>> for SendError<T> {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> From<mpsc::SendError<T>> for TrySendError<T> {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> From<mpsc::TrySendError<T>> for TrySendError<T> {$/;"	i
From	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^impl<M> From<channel::TrySendError<M>> for NotifyError<M> {$/;"	i
From for PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl From<Io> for PipeReader {$/;"	i
From for PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl From<Io> for PipeWriter {$/;"	i
From for ReadinessState	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl From<usize> for ReadinessState {$/;"	i
From for Ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl From<UnixReady> for Ready {$/;"	i
From for SendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> From<io::Error> for SendError<T> {$/;"	i
From for Token	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/token.rs	/^impl From<usize> for Token {$/;"	i
From for TrySendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> From<io::Error> for TrySendError<T> {$/;"	i
From for UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl From<sys::UnixSocket> for UnixListener {$/;"	i
From for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl From<Ready> for UnixReady {$/;"	i
From for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl From<sys::UnixSocket> for UnixSocket {$/;"	i
From for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl From<Io> for UnixSocket {$/;"	i
From for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl From<sys::UnixSocket> for UnixStream {$/;"	i
From for usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl From<ReadinessState> for usize {$/;"	i
From for usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/token.rs	/^impl From<Token> for usize {$/;"	i
FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^impl<T> FromRawArc<T> {$/;"	i
FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^pub struct FromRawArc<T> {$/;"	s
FromRawFd for Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl FromRawFd for Io {$/;"	i
FromRawFd for PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl FromRawFd for PipeReader {$/;"	i
FromRawFd for PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl FromRawFd for PipeWriter {$/;"	i
FromRawFd for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl FromRawFd for TcpListener {$/;"	i
FromRawFd for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl FromRawFd for TcpListener {$/;"	i
FromRawFd for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl FromRawFd for TcpStream {$/;"	i
FromRawFd for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl FromRawFd for TcpStream {$/;"	i
FromRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^impl FromRawFd for UdpSocket {$/;"	i
FromRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^impl FromRawFd for UdpSocket {$/;"	i
FromRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^impl FromRawFd for UdpSocket {$/;"	i
FromRawFd for UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl FromRawFd for UnixListener {$/;"	i
FromRawFd for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl FromRawFd for UnixSocket {$/;"	i
FromRawFd for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl FromRawFd for UnixSocket {$/;"	i
FromRawFd for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl FromRawFd for UnixStream {$/;"	i
HUP	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^const HUP: usize      = 0b1000;$/;"	c
HUP	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^const HUP: usize   = 0b1000;$/;"	c
Handler	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^pub trait Handler: Sized {$/;"	t
Handler for Nop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    impl Handler for Nop {$/;"	i
INTEREST_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const INTEREST_SHIFT: usize = 4;$/;"	c
Imp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^impl Imp {$/;"	i
Imp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^struct Imp {$/;"	s
Inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^struct Inner {$/;"	s
Inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^struct Inner<T> {$/;"	s
Inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^struct Inner {$/;"	s
Inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^struct Inner {$/;"	s
IntoIter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    type IntoIter = Iter<'a>;$/;"	T
IntoIterator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl<'a> IntoIterator for &'a Events {$/;"	i
IntoRawFd for Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl IntoRawFd for Io {$/;"	i
IntoRawFd for PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl IntoRawFd for PipeReader {$/;"	i
IntoRawFd for PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl IntoRawFd for PipeWriter {$/;"	i
IntoRawFd for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl IntoRawFd for TcpListener {$/;"	i
IntoRawFd for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl IntoRawFd for TcpListener {$/;"	i
IntoRawFd for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl IntoRawFd for TcpStream {$/;"	i
IntoRawFd for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl IntoRawFd for TcpStream {$/;"	i
IntoRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^impl IntoRawFd for UdpSocket {$/;"	i
IntoRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^impl IntoRawFd for UdpSocket {$/;"	i
IntoRawFd for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^impl IntoRawFd for UdpSocket {$/;"	i
IntoRawFd for UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl IntoRawFd for UnixListener {$/;"	i
IntoRawFd for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl IntoRawFd for UnixSocket {$/;"	i
IntoRawFd for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl IntoRawFd for UnixSocket {$/;"	i
IntoRawFd for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl IntoRawFd for UnixStream {$/;"	i
Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl Io {$/;"	i
Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^pub struct Io {$/;"	s
Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^struct Io {$/;"	s
IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl IoVec {$/;"	i
IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^pub struct IoVec {$/;"	s
IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^impl IoVec {$/;"	i
IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^pub struct IoVec {$/;"	s
IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^impl IoVec {$/;"	i
IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^pub struct IoVec {$/;"	s
IsMinusOne	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^trait IsMinusOne {$/;"	t
IsMinusOne for i32	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^impl IsMinusOne for i32 {$/;"	i
IsMinusOne for isize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^impl IsMinusOne for isize {$/;"	i
Item	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    type Item = Event;$/;"	T
Iter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub struct Iter<'a> {$/;"	s
Iterator for Iter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl<'a> Iterator for Iter<'a> {$/;"	i
KeventList	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^struct KeventList(Vec<libc::kevent>);$/;"	s
Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/core_lazy.rs	/^impl<T: Sync> Lazy<T> {$/;"	i
Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/core_lazy.rs	/^pub struct Lazy<T: Sync>(Once<T>);$/;"	s
Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lazy.rs	/^impl<T: Sync> Lazy<T> {$/;"	i
Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lazy.rs	/^pub struct Lazy<T: Sync>(pub *const T, pub Once);$/;"	s
Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/nightly_lazy.rs	/^impl<T: Sync> Lazy<T> {$/;"	i
Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/nightly_lazy.rs	/^pub struct Lazy<T: Sync>(UnsafeCell<Option<T>>, Once);$/;"	s
LazyStatic	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^pub trait LazyStatic {$/;"	t
ListenerImp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl ListenerImp {$/;"	i
ListenerImp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^struct ListenerImp {$/;"	s
ListenerInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^struct ListenerInner {$/;"	s
ListenerIo	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^struct ListenerIo {$/;"	s
Loop	/home/dpc/lab/rust/miofib/src/lib.rs	/^impl Loop {$/;"	i
Loop	/home/dpc/lab/rust/miofib/src/lib.rs	/^struct Loop {$/;"	s
LoopMsg	/home/dpc/lab/rust/miofib/src/lib.rs	/^enum LoopMsg {$/;"	g
LoopRx	/home/dpc/lab/rust/miofib/src/lib.rs	/^impl LoopRx {$/;"	i
LoopRx	/home/dpc/lab/rust/miofib/src/lib.rs	/^struct LoopRx {$/;"	s
LoopTx	/home/dpc/lab/rust/miofib/src/lib.rs	/^impl LoopTx {$/;"	i
LoopTx	/home/dpc/lab/rust/miofib/src/lib.rs	/^struct LoopTx {$/;"	s
MAP_STACK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^const MAP_STACK: libc::c_int = 0;$/;"	c
MAP_STACK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^const MAP_STACK: libc::c_int = libc::MAP_STACK;$/;"	c
MASK_2	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const MASK_2: usize = 4 - 1;$/;"	c
MASK_4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const MASK_4: usize = 16 - 1;$/;"	c
MAX_LENGTH	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^pub const MAX_LENGTH: usize = sys::MAX_LENGTH;$/;"	c
MAX_LENGTH	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^pub const MAX_LENGTH: usize = usize::MAX;$/;"	c
MAX_LENGTH	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^pub const MAX_LENGTH: usize = u32::MAX as usize;$/;"	c
MAX_REFCOUNT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const MAX_REFCOUNT: usize = (isize::MAX) as usize;$/;"	c
MILLIS_PER_SEC	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^    const MILLIS_PER_SEC: u64 = 1_000;$/;"	c
MILLIS_PER_SEC	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^const MILLIS_PER_SEC: u64 = 1_000;$/;"	c
MapNonBlock	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^pub trait MapNonBlock<T> {$/;"	t
MapNonBlock for Result	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^impl<T> MapNonBlock<T> for Result<T> {$/;"	i
Message	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    type Message;$/;"	T
Message	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^        type Message = ();$/;"	T
Miofib	/home/dpc/lab/rust/miofib/src/lib.rs	/^impl Miofib {$/;"	i
Miofib	/home/dpc/lab/rust/miofib/src/lib.rs	/^struct Miofib {$/;"	s
MyInto	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^trait MyInto<T> {$/;"	t
MyInto for usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl MyInto<u32> for usize {$/;"	i
MyInto for usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl MyInto<usize> for usize {$/;"	i
NANOS_PER_MILLI	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^    const NANOS_PER_MILLI: u32 = 1_000_000;$/;"	c
NANOS_PER_MILLI	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^const NANOS_PER_MILLI: u32 = 1_000_000;$/;"	c
NEXT_ID	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^static NEXT_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NEXT_ID	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^static NEXT_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NEXT_ID	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^static NEXT_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NOTIFY	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^const NOTIFY: Token = Token(usize::MAX - 1);$/;"	c
NULL	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^    const NULL: *mut libc::c_void = 0 as *mut libc::c_void;$/;"	c
NULL	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^    const NULL: winapi::LPVOID = 0 as winapi::LPVOID;$/;"	c
NoSendString	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	impl NoSendString {$/;"	i
NoSendString	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	struct NoSendString(String, Rc<()>);$/;"	s
Nop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    struct Nop;$/;"	s
NotifyError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^pub enum NotifyError<T> {$/;"	g
OldTimerResult	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub type OldTimerResult<T> = Result<T>;$/;"	T
Output	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^    type Output;$/;"	T
Output	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    type Output = UnixStream;$/;"	T
Output	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    type Output = PollOpt;$/;"	T
Output	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    type Output = Ready;$/;"	T
Output	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    type Output = UnixReady;$/;"	T
Overlapped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl Overlapped {$/;"	i
Overlapped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^pub struct Overlapped {$/;"	s
PAGE_SIZE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^    static PAGE_SIZE: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
PAGE_SIZE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^    static PAGE_SIZE: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
POLL_OPT_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const POLL_OPT_SHIFT: usize = 8;$/;"	c
PROT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^    const PROT: libc::c_int = libc::PROT_READ | libc::PROT_WRITE;$/;"	c
PROT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^    const PROT: winapi::DWORD = winapi::PAGE_READWRITE;$/;"	c
PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl PipeReader {$/;"	i
PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^pub struct PipeReader {$/;"	s
PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl PipeWriter {$/;"	i
PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^pub struct PipeWriter {$/;"	s
Poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Poll {$/;"	i
Poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub struct Poll {$/;"	s
PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl PollOpt {$/;"	i
PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub struct PollOpt(usize);$/;"	s
ProtectedFixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl ProtectedFixedSizeStack {$/;"	i
ProtectedFixedSizeStack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^pub struct ProtectedFixedSizeStack(Stack);$/;"	s
QUEUED_MASK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const QUEUED_MASK: usize = 1 << QUEUED_SHIFT;$/;"	c
QUEUED_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const QUEUED_SHIFT: usize = 16;$/;"	c
READABLE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^const READABLE: usize = 0b0001;$/;"	c
READINESS_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const READINESS_SHIFT: usize = 0;$/;"	c
Read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl<'a> Read for &'a PipeReader {$/;"	i
Read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl<'a> Read for &'a TcpStream {$/;"	i
Read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl<'a> Read for &'a Io {$/;"	i
Read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl<'a> Read for &'a TcpStream {$/;"	i
Read for Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl Read for Io {$/;"	i
Read for PipeReader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Read for PipeReader {$/;"	i
Read for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl Read for TcpStream {$/;"	i
Read for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl Read for UnixSocket {$/;"	i
Read for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Read for UnixStream {$/;"	i
ReadinessNode	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl ReadinessNode {$/;"	i
ReadinessNode	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^struct ReadinessNode {$/;"	s
ReadinessQueue	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl ReadinessQueue {$/;"	i
ReadinessQueue	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^struct ReadinessQueue {$/;"	s
ReadinessQueueInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl ReadinessQueueInner {$/;"	i
ReadinessQueueInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^struct ReadinessQueueInner {$/;"	s
ReadinessState	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl ReadinessState {$/;"	i
ReadinessState	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^struct ReadinessState(usize);$/;"	s
Ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl Ready {$/;"	i
Ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub struct Ready(usize);$/;"	s
ReadyBinding	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl ReadyBinding {$/;"	i
ReadyBinding	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^pub struct ReadyBinding {$/;"	s
Receiver	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> Receiver<T> {$/;"	i
Receiver	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub struct Receiver<T> {$/;"	s
ReceiverCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl ReceiverCtl {$/;"	i
ReceiverCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub struct ReceiverCtl {$/;"	s
Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl Registration {$/;"	i
Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub struct Registration {$/;"	s
RegistrationInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl RegistrationInner {$/;"	i
RegistrationInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^struct RegistrationInner {$/;"	s
Result	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^		impl< $($typevar,)* Result, F: 'static + FnOnce($($typevar),*) -> Result $($add)*> From<F> for $name<($($typevar,)*), Result> {$/;"	i
Result	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^		impl<$($typevar,)* Result, F: FnOnce($($typevar),*) -> Result> FnBox<($($typevar,)*), Result> for F {$/;"	i
Result	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub type Result<T> = ::std::result::Result<T, TimerError>;$/;"	T
ResumeOntopFn	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^pub type ResumeOntopFn = extern "C" fn(t: Transfer) -> Transfer;$/;"	T
SCM_RIGHTS	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^            const SCM_RIGHTS: libc::c_int = 1;$/;"	c
SOCK_CLOEXEC	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^        const SOCK_CLOEXEC: libc::c_int = 0;$/;"	c
SOCK_NONBLOCK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^        const SOCK_NONBLOCK: libc::c_int = 0;$/;"	c
Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^impl Selector {$/;"	i
Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^pub struct Selector {$/;"	s
Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^impl Selector {$/;"	i
Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^pub struct Selector {$/;"	s
Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl Selector {$/;"	i
Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^pub struct Selector {$/;"	s
SelectorId	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl SelectorId {$/;"	i
SelectorId	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub struct SelectorId {$/;"	s
SelectorInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl SelectorInner {$/;"	i
SelectorInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^struct SelectorInner {$/;"	s
Send for FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^unsafe impl<T: Sync + Send> Send for FromRawArc<T> { }$/;"	i
Send for KeventList	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^unsafe impl Send for KeventList {}$/;"	i
Send for Overlapped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^unsafe impl Send for Overlapped {}$/;"	i
Send for ReadinessQueue	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe impl Send for ReadinessQueue {}$/;"	i
Send for Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe impl Send for Registration {}$/;"	i
Send for SetReadiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe impl Send for SetReadiness {}$/;"	i
SendBoxFnOnce	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^impl<Args, Result> SendBoxFnOnce<Args, Result> {$/;"	i
SendBoxFnOnce	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^pub struct SendBoxFnOnce<Arguments, Result = ()> (Box<FnBox<Arguments, Result> + Send>);$/;"	s
SendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub enum SendError<T> {$/;"	g
SendString	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	impl SendString {$/;"	i
SendString	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	struct SendString(String, Arc<()>);$/;"	s
Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> Sender<T> {$/;"	i
Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl<M> Sender<M> {$/;"	i
Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^pub struct Sender<M> {$/;"	s
SenderCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl SenderCtl {$/;"	i
SenderCtl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub struct SenderCtl {$/;"	s
SetReadiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl SetReadiness {$/;"	i
SetReadiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub struct SetReadiness {$/;"	s
Slab	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^type Slab<T> = ::slab::Slab<T, ::Token>;$/;"	T
Stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^impl Stack {$/;"	i
Stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^pub struct Stack {$/;"	s
StackError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^pub enum StackError {$/;"	g
State	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^enum State<T, U> {$/;"	g
State	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^enum State<T, U> {$/;"	g
StreamImp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl StreamImp {$/;"	i
StreamImp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^struct StreamImp {$/;"	s
StreamInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^struct StreamInner {$/;"	s
StreamIo	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^struct StreamIo {$/;"	s
Sync for FromRawArc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^unsafe impl<T: Sync + Send> Sync for FromRawArc<T> { }$/;"	i
Sync for KeventList	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^unsafe impl Sync for KeventList {}$/;"	i
Sync for Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lazy.rs	/^unsafe impl<T: Sync> Sync for Lazy<T> {}$/;"	i
Sync for Lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/nightly_lazy.rs	/^unsafe impl<T: Sync> Sync for Lazy<T> {}$/;"	i
Sync for Overlapped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^unsafe impl Sync for Overlapped {}$/;"	i
Sync for ReadinessQueue	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe impl Sync for ReadinessQueue {}$/;"	i
Sync for Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe impl Sync for Registration {}$/;"	i
Sync for SetReadiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe impl Sync for SetReadiness {}$/;"	i
SyncSender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> SyncSender<T> {$/;"	i
SyncSender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub struct SyncSender<T> {$/;"	s
TERMINATE_THREAD	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^const TERMINATE_THREAD: usize = 0;$/;"	c
TICK_MAX	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^const TICK_MAX: Tick = u64::MAX;$/;"	c
TIMER	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^const TIMER: Token = Token(usize::MAX - 2);$/;"	c
TOKEN_RD_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const TOKEN_RD_SHIFT: usize = 12;$/;"	c
TOKEN_WR_SHIFT	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^const TOKEN_WR_SHIFT: usize = 14;$/;"	c
TYPE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^    const TYPE: libc::c_int = libc::MAP_PRIVATE | libc::MAP_ANON | MAP_STACK;$/;"	c
TYPE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^    const TYPE: winapi::DWORD = winapi::MEM_COMMIT | winapi::MEM_RESERVE;$/;"	c
TYPE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^    const TYPE: winapi::DWORD = winapi::PAGE_READWRITE | winapi::PAGE_GUARD;$/;"	c
Target	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    type Target = Stack;$/;"	T
Target	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    type Target = [u8];$/;"	T
Target	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^            type Target = $T;$/;"	T
Target	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    type Target = ReadinessNode;$/;"	T
Target	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    type Target = Ready;$/;"	T
Target	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    type Target = T;$/;"	T
TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl TcpListener {$/;"	i
TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^pub struct TcpListener {$/;"	s
TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl TcpListener {$/;"	i
TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^pub struct TcpListener {$/;"	s
TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl TcpListener {$/;"	i
TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^pub struct TcpListener {$/;"	s
TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl TcpStream {$/;"	i
TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^pub struct TcpStream {$/;"	s
TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl TcpStream {$/;"	i
TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^pub struct TcpStream {$/;"	s
TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl TcpStream {$/;"	i
TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^pub struct TcpStream {$/;"	s
Tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^type Tick = u64;$/;"	T
Timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    type Timeout;$/;"	T
Timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^        type Timeout = ();$/;"	T
Timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub struct Timeout {$/;"	s
Timer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl<T> Timer<T> {$/;"	i
Timer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub struct Timer<T> {$/;"	s
TimerError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl TimerError {$/;"	i
TimerError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub struct TimerError {$/;"	s
TimerErrorKind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub enum TimerErrorKind {$/;"	g
TimerResult	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^pub type TimerResult<T> = Result<T>;$/;"	T
Token	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/token.rs	/^pub struct Token(pub usize);$/;"	s
Transfer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^impl Transfer {$/;"	i
Transfer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^pub struct Transfer {$/;"	s
TryAccept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^pub trait TryAccept {$/;"	t
TryAccept for UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl TryAccept for UnixListener {$/;"	i
TryRead	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^pub trait TryRead {$/;"	t
TryRead for T	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^impl<T: Read> TryRead for T {$/;"	i
TrySendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub enum TrySendError<T> {$/;"	g
TryWrite	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^pub trait TryWrite {$/;"	t
TryWrite for T	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^impl<T: Write> TryWrite for T {$/;"	i
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^impl UdpSocket {$/;"	i
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^pub struct UdpSocket {$/;"	s
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^impl UdpSocket {$/;"	i
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^pub struct UdpSocket {$/;"	s
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^impl UdpSocket {$/;"	i
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^pub struct UdpSocket {$/;"	s
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^impl UdpSocket {$/;"	i
UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^pub struct UdpSocket {$/;"	s
UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl UnixListener {$/;"	i
UnixListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^pub struct UnixListener {$/;"	s
UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl UnixReady {$/;"	i
UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^pub struct UnixReady(Ready);$/;"	s
UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl UnixSocket {$/;"	i
UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^pub struct UnixSocket {$/;"	s
UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl UnixSocket {$/;"	i
UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^pub struct UnixSocket {$/;"	s
UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl UnixStream {$/;"	i
UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^pub struct UnixStream {$/;"	s
VirtualProtect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^    pub fn VirtualProtect(lpAddress: winapi::LPVOID,$/;"	f
WOULDBLOCK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^    const WOULDBLOCK: i32 = ::libc::EAGAIN;$/;"	c
WOULDBLOCK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^    const WOULDBLOCK: i32 = ::winapi::winerror::WSAEWOULDBLOCK as i32;$/;"	c
WOULDBLOCK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^const WOULDBLOCK: i32 = ::winapi::winerror::WSAEWOULDBLOCK as i32;$/;"	c
WOULDBLOCK	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^const WOULDBLOCK: i32 = ::winapi::winerror::WSAEWOULDBLOCK as i32;$/;"	c
WRITABLE	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^const WRITABLE: usize = 0b0010;$/;"	c
WakeupState	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^type WakeupState = Arc<AtomicUsize>;$/;"	T
WheelEntry	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^struct WheelEntry {$/;"	s
Write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl<'a> Write for &'a PipeWriter {$/;"	i
Write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl<'a> Write for &'a TcpStream {$/;"	i
Write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl<'a> Write for &'a Io {$/;"	i
Write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^impl<'a> Write for &'a TcpStream {$/;"	i
Write for Io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^impl Write for Io {$/;"	i
Write for PipeWriter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Write for PipeWriter {$/;"	i
Write for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^impl Write for TcpStream {$/;"	i
Write for UnixSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^impl Write for UnixSocket {$/;"	i
Write for UnixStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^impl Write for UnixStream {$/;"	i
__lazy_static_create	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/core_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_create	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_create	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/nightly_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	d
__lazy_static_internal	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^macro_rules! __lazy_static_internal {$/;"	d
__stability	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^                    unsafe fn __stability() -> &'static $T {$/;"	f
__static_ref_initialize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^                    fn __static_ref_initialize() -> $T { $e }$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^    fn accept(&self) -> io::Result<Option<Self::Output>>;$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn accept(&self) -> io::Result<Option<UnixStream>> {$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn accept(&self) -> io::Result<UnixStream> {$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn accept(&self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn accept(&self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn accept(&self) -> io::Result<UnixSocket> {$/;"	f
accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn accept(&self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	f
accept_done	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^fn accept_done(status: &OVERLAPPED_ENTRY) {$/;"	f
add_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn add_readiness(&self, me: &mut ListenerInner, set: Ready) {$/;"	f
add_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn add_readiness(&self, me: &mut StreamInner, set: Ready) {$/;"	f
add_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn add_readiness(&self, me: &Inner, set: Ready) {$/;"	f
all	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn all() -> PollOpt {$/;"	f
all	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn all() -> Ready {$/;"	f
allocate	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn allocate(mut size: usize, protected: bool) -> Result<Stack, StackError> {$/;"	f
allocate_stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^pub fn allocate_stack(size: usize) -> io::Result<Stack> {$/;"	f
allocate_stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^pub fn allocate_stack(size: usize) -> io::Result<Stack> {$/;"	f
as_bytes	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^    pub fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^    pub fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_mut_bytes	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    pub fn as_mut_bytes(&mut self) -> &mut [u8] {$/;"	f
as_mut_ptr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn as_mut_ptr(&self) -> *mut OVERLAPPED {$/;"	f
as_os_slice	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/unix.rs	/^pub fn as_os_slice<'a>(iov: &'a [&IoVec]) -> &'a [libc::iovec] {$/;"	f
as_os_slice_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/unix.rs	/^pub fn as_os_slice_mut<'a>(iov: &'a mut [&mut IoVec]) -> &'a mut [libc::iovec] {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	f
as_ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^    pub fn as_ref(&self) -> &[u8] {$/;"	f
as_ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^    pub fn as_ref(&self) -> &[u8] {$/;"	f
associate_selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn associate_selector(&self, poll: &Poll) -> io::Result<()> {$/;"	f
awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod awakener;$/;"	m
awakener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^mod awakener;$/;"	m
bind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn bind<P: AsRef<Path> + ?Sized>(&self, addr: &P) -> io::Result<()> {$/;"	f
bind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn bind<P: AsRef<Path> + ?Sized>(addr: &P) -> io::Result<UnixListener> {$/;"	f
bind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn bind(addr: &SocketAddr) -> io::Result<TcpListener> {$/;"	f
bind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn bind(addr: &SocketAddr) -> io::Result<UdpSocket> {$/;"	f
bind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn bind<P: AsRef<Path> + ?Sized>(&self, addr: &P) -> io::Result<()> {$/;"	f
bind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn bind(addr: &SocketAddr) -> io::Result<UdpSocket> {$/;"	f
bitand	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn bitand(self, other: PollOpt) -> PollOpt {$/;"	f
bitand	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn bitand(self, other: T) -> Ready {$/;"	f
bitand	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn bitand(self, other: UnixReady) -> UnixReady {$/;"	f
bitor	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn bitor(self, other: PollOpt) -> PollOpt {$/;"	f
bitor	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn bitor(self, other: T) -> Ready {$/;"	f
bitor	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn bitor(self, other: UnixReady) -> UnixReady {$/;"	f
bits	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn bits(&self) -> usize {$/;"	f
bitxor	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn bitxor(self, other: PollOpt) -> PollOpt {$/;"	f
bitxor	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn bitxor(self, other: T) -> Ready {$/;"	f
bitxor	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn bitxor(self, other: UnixReady) -> UnixReady {$/;"	f
bottom	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn bottom(&self) -> *mut c_void {$/;"	f
broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	f
broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	f
broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	f
broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	f
buffer_pool	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^mod buffer_pool;$/;"	m
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn build<H: Handler>(self) -> io::Result<EventLoop<H>> {$/;"	f
build	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn build<T>(self) -> Timer<T> {$/;"	f
build_n_args	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^macro_rules! build_n_args {$/;"	d
call	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^			fn call(self: Box<Self>, ($($var,)*): ($($typevar,)*)) -> Result {$/;"	f
call	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^			pub fn call(self $(, $var: $typevar)*) -> Result {$/;"	f
call	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/traits.rs	/^	fn call(self: Box<Self>, args: Arguments) -> Result;$/;"	f
call_tuple	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	pub fn call_tuple(self, args: Args) -> Result {$/;"	f
call_tuple	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	pub fn call_tuple(self, args: Args) -> Result {$/;"	f
cancel	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^unsafe fn cancel(socket: &AsRawSocket,$/;"	f
cancel_timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn cancel_timeout(&mut self, timeout: &Timeout) -> Option<T> {$/;"	f
capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn capacity(mut self, capacity: usize) -> Builder {$/;"	f
cause	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^    fn cause(&self) -> Option<&error::Error> {$/;"	f
channel	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn channel(&self) -> Sender<H::Message> {$/;"	f
channel	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod channel;$/;"	m
channel	/home/dpc/lab/rust/miofib/src/lib.rs	/^fn channel() -> (LoopTx, LoopRx) {$/;"	f
check_same_selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    fn check_same_selector(&self, poll: &Poll) -> io::Result<()> {$/;"	f
cleanup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        pub fn cleanup(&self) {$/;"	f
cleanup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^    pub fn cleanup(&self) {$/;"	f
clear_timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn clear_timeout(&mut self, timeout: &Timeout) -> bool {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn clone(&self) -> Sender<T> {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn clone(&self) -> SenderCtl {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn clone(&self) -> SyncSender<T> {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn clone(&self) -> Sender<M> {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn clone(&self) -> RegistrationInner {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn clone(&self) -> SelectorId {$/;"	f
clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    fn clone(&self) -> FromRawArc<T> {$/;"	f
clone_ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn clone_ref(&self) -> Selector {$/;"	f
closure_string	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn closure_string() -> NoSendString {$/;"	f
closure_string	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn closure_string() -> SendString {$/;"	f
coalesce	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    fn coalesce(&mut self, awakener: Token) -> bool {$/;"	f
compare_and_swap	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn compare_and_swap(&self, current: ReadinessState, new: ReadinessState, order: Ordering) -> ReadinessState {$/;"	f
configured	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn configured(config: Config) -> io::Result<EventLoop<H>> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn connect<P: AsRef<Path> + ?Sized>(path: &P) -> io::Result<UnixStream> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn connect<P: AsRef<Path> + ?Sized>(self, addr: &P) -> io::Result<(UnixStream, bool)> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn connect(addr: &SocketAddr) -> io::Result<TcpStream> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn connect(&self, addr: SocketAddr) -> io::Result<()> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn connect(stream: net::TcpStream, addr: &SocketAddr) -> io::Result<TcpStream> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn connect(&self, addr: SocketAddr)$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn connect<P: AsRef<Path> + ?Sized>(&self, addr: &P) -> io::Result<()> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn connect(socket: net::TcpStream, addr: &SocketAddr)$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn connect(&self, addr: SocketAddr) -> io::Result<()> {$/;"	f
connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn connect(&self, addr: SocketAddr)$/;"	f
connect_stream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn connect_stream(stream: net::TcpStream,$/;"	f
contains	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn contains(&self, other: PollOpt) -> bool {$/;"	f
contains	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn contains<T: Into<Self>>(&self, other: T) -> bool {$/;"	f
context	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/lib.rs	/^pub mod context;$/;"	m
context_function	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^        extern "C" fn context_function(mut t: Transfer) -> ! {$/;"	f
context_function	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^        extern "C" fn context_function(t: Transfer) -> ! {$/;"	f
context_function	/home/dpc/lab/rust/miofib/src/lib.rs	/^        extern "C" fn context_function(mut t: context::Transfer) -> ! {$/;"	f
convert	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^mod convert {$/;"	m
convert_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn convert_mut() {$/;"	f
convert_ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn convert_ref() {$/;"	f
ctl_pair	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub fn ctl_pair() -> (SenderCtl, ReceiverCtl) {$/;"	f
current_tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^fn current_tick(start: Instant, tick_ms: u64) -> Tick {$/;"	f
cvt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^fn cvt<T: IsMinusOne>(t: T) -> ::io::Result<T> {$/;"	f
deallocate_stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^pub fn deallocate_stack(ptr: *mut c_void, size: usize) {$/;"	f
deallocate_stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^pub fn deallocate_stack(ptr: *mut c_void, _: usize) {$/;"	f
dec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    pub fn dec(&self) -> io::Result<()> {$/;"	f
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn default() -> FixedSizeStack {$/;"	f
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn default() -> ProtectedFixedSizeStack {$/;"	f
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn default() -> Self {$/;"	f
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn default() -> Config {$/;"	f
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn default() -> Builder {$/;"	f
default	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn default() -> Timer<T> {$/;"	f
default_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn default_size() -> usize {$/;"	f
default_stack_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/mod.rs	/^pub fn default_stack_size() -> usize {$/;"	f
deprecated	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^pub mod deprecated {$/;"	m
deprecated	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod deprecated;$/;"	m
dequeue_node	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    unsafe fn dequeue_node(&self, until: *mut ReadinessNode) -> Dequeue {$/;"	f
deref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn deref(&self) -> &Stack {$/;"	f
deref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^            fn deref(&self) -> &$T {$/;"	f
deref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn deref(&self) -> &ReadinessNode {$/;"	f
deref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn deref(&self) -> &Ready {$/;"	f
deref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    fn deref(&self) -> &T {$/;"	f
deref_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut [u8] {$/;"	f
deref_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn deref_mut(&mut self) -> &mut Ready {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn deregister<E: ?Sized>(&mut self, io: &E) -> io::Result<()> where E: Evented {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()>;$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn deregister<E: ?Sized>(&self, handle: &E) -> io::Result<()>$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn deregister(&self, fd: RawFd) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/eventedfd.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn deregister(&self, fd: RawFd) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^    fn deregister(&self, _poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn deregister(&mut self,$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    fn deregister(&self, poll: &Poll) -> io::Result<()> {$/;"	f
deregister_handle	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub unsafe fn deregister_handle(&self,$/;"	f
deregister_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub unsafe fn deregister_socket(&self,$/;"	f
description	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn description(&self) -> &str {$/;"	f
disarm	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn disarm(&mut self) {$/;"	f
dlsym	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/dlsym.rs	/^macro_rules! dlsym {$/;"	d
dlsym	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^pub mod dlsym;$/;"	m
does_not_register_rw	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^fn does_not_register_rw() {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^            fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn drop(&mut self) {$/;"	f
drops	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    fn drops() {$/;"	f
duration_to_tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^fn duration_to_tick(elapsed: Duration, tick_ms: u64) -> Tick {$/;"	f
edge	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn edge() -> PollOpt {$/;"	f
effective_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn effective_readiness(&self) -> Ready {$/;"	f
empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn empty() -> PollOpt {$/;"	f
empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn empty() -> Ready {$/;"	f
end_marker	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn end_marker(&self) -> *mut ReadinessNode {$/;"	f
enqueue_node	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn enqueue_node(&self, node: &ReadinessNode) -> bool {$/;"	f
enqueue_node_with_wakeup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn enqueue_node_with_wakeup(&self, node: &ReadinessNode) -> io::Result<()> {$/;"	f
enqueue_with_wakeup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn enqueue_with_wakeup(&self) -> io::Result<()> {$/;"	f
enqueue_with_wakeup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^fn enqueue_with_wakeup(queue: *mut (), node: &ReadinessNode) -> io::Result<()> {$/;"	f
epoll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod epoll;$/;"	m
error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn error() -> Ready {$/;"	f
error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    pub fn error() -> UnixReady {$/;"	f
error::Error for NotifyError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^impl<M: any::Any> error::Error for NotifyError<M> {$/;"	i
error::Error for SendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T: Any> error::Error for SendError<T> {$/;"	i
error::Error for TimerError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl error::Error for TimerError {$/;"	i
error::Error for TrySendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T: Any> error::Error for TrySendError<T> {$/;"	i
event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod event {$/;"	m
event_imp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^mod event_imp;$/;"	m
event_loop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/mod.rs	/^mod event_loop;$/;"	m
eventedfd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod eventedfd;$/;"	m
fetch	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/dlsym.rs	/^unsafe fn fetch(name: &str) -> usize {$/;"	f
flag_as_dropped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn flag_as_dropped(&self) -> bool {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn flush(&self) -> io::Result<()> {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt::Debug for Binding	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl fmt::Debug for Binding {$/;"	i
fmt::Debug for Context	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^impl fmt::Debug for Context {$/;"	i
fmt::Debug for EventLoop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl<H: Handler> fmt::Debug for EventLoop<H> {$/;"	i
fmt::Debug for Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl fmt::Debug for Events {$/;"	i
fmt::Debug for Events	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^impl fmt::Debug for Events {$/;"	i
fmt::Debug for Inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl fmt::Debug for Inner {$/;"	i
fmt::Debug for NotifyError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^impl<M> fmt::Debug for NotifyError<M> {$/;"	i
fmt::Debug for Overlapped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^impl fmt::Debug for Overlapped {$/;"	i
fmt::Debug for Poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl fmt::Debug for Poll {$/;"	i
fmt::Debug for PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl fmt::Debug for PollOpt {$/;"	i
fmt::Debug for Ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl fmt::Debug for Ready {$/;"	i
fmt::Debug for Registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl fmt::Debug for Registration {$/;"	i
fmt::Debug for Selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^impl fmt::Debug for Selector {$/;"	i
fmt::Debug for SendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> fmt::Debug for SendError<T> {$/;"	i
fmt::Debug for Sender	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^impl<M> fmt::Debug for Sender<M> {$/;"	i
fmt::Debug for SetReadiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl fmt::Debug for SetReadiness {$/;"	i
fmt::Debug for TcpListener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl fmt::Debug for TcpListener {$/;"	i
fmt::Debug for TcpStream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^impl fmt::Debug for TcpStream {$/;"	i
fmt::Debug for TrySendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> fmt::Debug for TrySendError<T> {$/;"	i
fmt::Debug for UdpSocket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^impl fmt::Debug for UdpSocket {$/;"	i
fmt::Display for NotifyError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^impl<M> fmt::Display for NotifyError<M> {$/;"	i
fmt::Display for SendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> fmt::Display for SendError<T> {$/;"	i
fmt::Display for TimerError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl fmt::Display for TimerError {$/;"	i
fmt::Display for TimerErrorKind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^impl fmt::Display for TimerErrorKind {$/;"	i
fmt::Display for TrySendError	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^impl<T> fmt::Display for TrySendError<T> {$/;"	i
fn	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/core_lazy.rs	/^    pub const fn new() -> Self {$/;"	c
fn	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/nightly_lazy.rs	/^    pub const fn new() -> Self {$/;"	c
format_send_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^fn format_send_error<T>(e: &SendError<T>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
format_try_send_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^fn format_try_send_error<T>(e: &TrySendError<T>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^			fn from(func: F) -> Self {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn from(bytes: &'a [u8]) -> &'a IoVec {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^    fn from(bytes: &'a mut [u8]) -> &'a mut IoVec {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^    fn from(src: &'a [u8]) -> Self {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^    fn from(src: &'a mut [u8]) -> Self {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^    fn from(src: &'a [u8]) -> Self {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^    fn from(src: &'a mut [u8]) -> Self {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn from(src: io::Error) -> SendError<T> {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn from(src: io::Error) -> TrySendError<T> {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn from(src: mpsc::SendError<T>) -> SendError<T> {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn from(src: mpsc::SendError<T>) -> TrySendError<T> {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn from(src: mpsc::TrySendError<T>) -> TrySendError<T> {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/notify.rs	/^    fn from(src: channel::TrySendError<M>) -> NotifyError<M> {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn from(io: Io) -> PipeReader {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn from(io: Io) -> PipeWriter {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn from(sys: sys::UnixSocket) -> UnixListener {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn from(sys: sys::UnixSocket) -> UnixSocket {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn from(sys: sys::UnixSocket) -> UnixStream {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn from(src: ReadinessState) -> usize {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn from(src: usize) -> ReadinessState {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn from(src: Ready) -> UnixReady {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn from(src: UnixReady) -> Ready {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn from(io: Io) -> UnixSocket {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/token.rs	/^    fn from(val: Token) -> usize {$/;"	f
from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/token.rs	/^    fn from(val: usize) -> Token {$/;"	f
from_listener	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn from_listener(listener: net::TcpListener, addr: &SocketAddr)$/;"	f
from_raw	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    pub unsafe fn from_raw(ptr: *mut T) -> FromRawArc<T> {$/;"	f
from_raw_arc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^mod from_raw_arc;$/;"	m
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> PipeReader {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> PipeWriter {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UnixListener {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UnixSocket {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UnixStream {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> TcpListener {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> TcpStream {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UdpSocket {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> Io {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> TcpListener {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> TcpStream {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UdpSocket {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UnixSocket {$/;"	f
from_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> UdpSocket {$/;"	f
from_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn from_socket(socket: net::UdpSocket) -> io::Result<UdpSocket> {$/;"	f
from_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn from_socket(socket: net::UdpSocket) -> io::Result<UdpSocket> {$/;"	f
from_stderr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn from_stderr(stderr: process::ChildStderr) -> io::Result<Self> {$/;"	f
from_stdin	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn from_stdin(stdin: process::ChildStdin) -> io::Result<Self> {$/;"	f
from_stdout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn from_stdout(stdout: process::ChildStdout) -> io::Result<Self> {$/;"	f
from_stream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn from_stream(stream: net::TcpStream) -> io::Result<TcpStream> {$/;"	f
from_stream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn from_stream(stream: net::TcpStream) -> TcpStream {$/;"	f
from_stream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn from_stream(stream: net::TcpStream) -> TcpStream {$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/core_lazy.rs	/^    pub fn get<F>(&'static self, builder: F) -> &T$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lazy.rs	/^    pub fn get<F>(&'static mut self, f: F) -> &T$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/nightly_lazy.rs	/^    pub fn get<F>(&'static self, f: F) -> &T$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn get(&self, mask: usize, shift: usize) -> usize{$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn get(&self, idx: usize) -> Option<Event> {$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/dlsym.rs	/^    pub fn get(&self) -> Option<&F> {$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn get(&self, idx: usize) -> Option<Event> {$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn get(&self, idx: usize) -> Option<Event> {$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/buffer_pool.rs	/^    pub fn get(&mut self, default_cap: usize) -> Vec<u8> {$/;"	f
get	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn get(&self, idx: usize) -> Option<Event> {$/;"	f
get_buffer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn get_buffer(&self, size: usize) -> Vec<u8> {$/;"	f
handler	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/mod.rs	/^mod handler;$/;"	m
hup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn hup() -> Ready {$/;"	f
hup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    pub fn hup() -> UnixReady {$/;"	f
id	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn id(&self) -> usize {$/;"	f
id	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn id(&self) -> usize {$/;"	f
id	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn id(&self) -> usize {$/;"	f
identical	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    fn identical(&self, other: &SelectorInner) -> bool {$/;"	f
impl_trait_n_args	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/macros.rs	/^macro_rules! impl_trait_n_args {$/;"	d
inaddr_any	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^fn inaddr_any(other: &SocketAddr) -> SocketAddr {$/;"	f
inc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    pub fn inc(&self) -> io::Result<()> {$/;"	f
initialize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^            fn initialize(lazy: &Self) {$/;"	f
initialize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^    fn initialize(lazy: &Self);$/;"	f
initialize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^pub fn initialize<T: LazyStatic>(lazy: &T) {$/;"	f
inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn inner(&self) -> MutexGuard<ListenerInner> {$/;"	f
inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn inner(&self) -> MutexGuard<StreamInner> {$/;"	f
inner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn inner(&self) -> MutexGuard<Inner> {$/;"	f
insert	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn insert(&mut self, other: PollOpt) {$/;"	f
insert	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn insert<T: Into<Self>>(&mut self, other: T) {$/;"	f
insert	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn insert(&mut self, tick: Tick, state: T) -> Result<Timeout> {$/;"	f
interest	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn interest(&self) -> Ready {$/;"	f
interrupted	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    fn interrupted(&mut self, event_loop: &mut EventLoop<Self>) {$/;"	f
into	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^		fn into(self) -> String {$/;"	f
into	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^		fn into(self) -> String {$/;"	f
into_iter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
into_raw_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	f
io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/mod.rs	/^mod io;$/;"	m
io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^mod io;$/;"	m
io	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod io;$/;"	m
io_event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn io_event(&mut self, handler: &mut H, evt: Event) {$/;"	f
io_poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn io_poll(&mut self, timeout: Option<Duration>) -> io::Result<usize> {$/;"	f
io_process	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn io_process(&mut self, handler: &mut H, cnt: usize) {$/;"	f
ioevent_to_epoll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^fn ioevent_to_epoll(interest: Ready, opts: PollOpt) -> u32 {$/;"	f
iovec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/unix.rs	/^    unsafe fn iovec(&self) -> libc::iovec {$/;"	f
is_dropped	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn is_dropped(&self) -> bool {$/;"	f
is_edge	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_edge(&self) -> bool {$/;"	f
is_empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_error(&self) -> bool {$/;"	f
is_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    pub fn is_error(&self) -> bool {$/;"	f
is_hup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_hup(&self) -> bool {$/;"	f
is_hup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    pub fn is_hup(&self) -> bool {$/;"	f
is_level	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_level(&self) -> bool {$/;"	f
is_minus_one	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^    fn is_minus_one(&self) -> bool { *self == -1 }$/;"	f
is_minus_one	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^    fn is_minus_one(&self) -> bool;$/;"	f
is_none	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_oneshot	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_oneshot(&self) -> bool {$/;"	f
is_queued	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn is_queued(&self) -> bool {$/;"	f
is_readable	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_readable(&self) -> bool {$/;"	f
is_running	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn is_running(&self) -> bool {$/;"	f
is_send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^fn is_send<T: Send>() {}$/;"	f
is_sync	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^fn is_sync<T: Sync>() {}$/;"	f
is_urgent	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_urgent(&self) -> bool {$/;"	f
is_urgent	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^fn is_urgent(_: PollOpt) -> bool {$/;"	f
is_urgent	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^fn is_urgent(opts: PollOpt) -> bool {$/;"	f
is_writable	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn is_writable(&self) -> bool {$/;"	f
it_works	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn it_works() {}$/;"	f
iter	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn iter(&self) -> Iter {$/;"	f
join_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn join_multicast_v4(&self,$/;"	f
join_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn join_multicast_v4(&self,$/;"	f
join_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn join_multicast_v4(&self,$/;"	f
join_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn join_multicast_v4(&self,$/;"	f
join_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn join_multicast_v6(&self,$/;"	f
join_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn join_multicast_v6(&self,$/;"	f
join_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn join_multicast_v6(&self,$/;"	f
join_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn join_multicast_v6(&self,$/;"	f
jump_fcontext	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn jump_fcontext(to: &'static c_void, p: usize) -> Transfer;$/;"	f
keepalive_ms	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn keepalive_ms(&self) -> io::Result<Option<u32>> {$/;"	f
keepalive_ms	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn keepalive_ms(&self) -> io::Result<Option<u32>> {$/;"	f
keepalive_ms	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn keepalive_ms(&self) -> io::Result<Option<u32>> {$/;"	f
kevent	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^macro_rules! kevent {$/;"	d
kind	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn kind(&self) -> Ready {$/;"	f
kind_mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub fn kind_mut(event: &mut Event) -> &mut Ready {$/;"	f
kqueue	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod kqueue;$/;"	m
lazy	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^pub mod lazy;$/;"	m
lazy_static	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^macro_rules! lazy_static {$/;"	d
leave_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn leave_multicast_v4(&self,$/;"	f
leave_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn leave_multicast_v4(&self,$/;"	f
leave_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn leave_multicast_v4(&self,$/;"	f
leave_multicast_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn leave_multicast_v4(&self,$/;"	f
leave_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn leave_multicast_v6(&self,$/;"	f
leave_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn leave_multicast_v6(&self,$/;"	f
leave_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn leave_multicast_v6(&self,$/;"	f
leave_multicast_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn leave_multicast_v6(&self,$/;"	f
len	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn len(&self) -> usize {$/;"	f
level	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn level() -> PollOpt {$/;"	f
listen	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn listen(self, backlog: usize) -> io::Result<UnixListener> {$/;"	f
listen	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn listen(&self, backlog: usize) -> io::Result<()> {$/;"	f
load	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn load(&self, order: Ordering) -> ReadinessState {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
local_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	f
macros	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/lib.rs	/^mod macros;$/;"	m
main	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^fn main() {$/;"	f
make_fcontext	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn make_fcontext(sp: *mut c_void, size: usize, f: ContextFn) -> &'static c_void;$/;"	f
map_non_block	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^    fn map_non_block(self) -> Result<Option<T>> {$/;"	f
map_non_block	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^    fn map_non_block(self) -> Result<Option<T>>;$/;"	f
marker	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn marker() -> ReadinessNode {$/;"	f
max_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn max_size() -> usize {$/;"	f
max_stack_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^pub fn max_stack_size() -> usize {$/;"	f
max_stack_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^pub fn max_stack_size() -> usize {$/;"	f
messages_per_tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn messages_per_tick(&mut self, messages: usize) -> &mut Self {$/;"	f
millis	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^    pub fn millis(duration: Duration) -> u64 {$/;"	f
millis	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^pub fn millis(duration: Duration) -> u64 {$/;"	f
min_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn min_size() -> usize {$/;"	f
min_stack_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^pub fn min_stack_size() -> usize {$/;"	f
min_stack_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^pub fn min_stack_size() -> usize {$/;"	f
multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	f
multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	f
multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	f
multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	f
multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	f
multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	f
mut	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lazy.rs	/^        static mut $NAME: $crate::lazy::Lazy<$T> = $crate::lazy::Lazy(0 as *const $T, ONCE_INIT);$/;"	c
my_into	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn my_into(self) -> T;$/;"	f
my_into	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn my_into(self) -> u32 { self as u32 }$/;"	f
my_into	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn my_into(self) -> usize { self }$/;"	f
net	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod net;$/;"	m
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	pub fn new<F>(func: F) -> Self$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	pub fn new<F>(func: F) -> Self$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    pub fn new(context: Context, data: usize) -> Transfer {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    pub fn new(stack: &Stack, f: ContextFn) -> Context {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn new(size: usize) -> Result<FixedSizeStack, StackError> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn new(size: usize) -> Result<ProtectedFixedSizeStack, StackError> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn new(top: *mut c_void, bottom: *mut c_void) -> Stack {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn new(tx: channel::SyncSender<M>) -> Sender<M> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn new() -> EventLoopBuilder {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn new() -> io::Result<EventLoop<H>> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn new(readiness: Ready, token: Token) -> Event {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn new() -> io::Result<ReadinessQueue> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn new(interest: Ready, opt: PollOpt) -> AtomicState {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn new(interest: Ready, opt: PollOpt) -> ReadinessState {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn new(queue: *mut (),$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn new() -> SelectorId {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn new() -> io::Result<Poll> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn new(poll: &Poll, token: Token, interest: Ready, opt: PollOpt)$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        pub fn new() -> io::Result<Awakener> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn new() -> io::Result<Selector> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn new() -> io::Result<Selector> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn new(inner: net::TcpListener, _addr: &SocketAddr) -> io::Result<TcpListener> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn new(socket: net::UdpSocket) -> io::Result<UdpSocket> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^    pub fn new() -> io::Result<Awakener> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/buffer_pool.rs	/^    pub fn new(cap: usize) -> BufferPool {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    pub fn new(data: T) -> FromRawArc<T> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn new() -> Binding {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn new() -> ReadyBinding {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn new() -> io::Result<Selector> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn new(cb: fn(&OVERLAPPED_ENTRY)) -> Overlapped {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn new(socket: net::TcpStream,$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn new(socket: net::TcpListener, addr: &SocketAddr)$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn new(socket: net::UdpSocket) -> io::Result<UdpSocket> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn new(state: T, tick: u64, next: Token) -> Entry<T> {$/;"	f
new	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn new(tick_ms: u64, num_slots: usize, capacity: usize, start: Instant) -> Timer<T> {$/;"	f
new	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn new() -> Self {$/;"	f
new	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn new(rx: LoopRx) -> Self {$/;"	f
new	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn new(rx: mpsc::Receiver<LoopMsg>, reg: mio::Registration) -> Self {$/;"	f
new	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn new(tx: mpsc::Sender<LoopMsg>, ctrl: mio::SetReadiness) -> Self {$/;"	f
new2	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn new2() -> (Registration, SetReadiness) {$/;"	f
new_family	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn new_family(socket: net::TcpListener, family: Family) -> TcpListener {$/;"	f
new_priv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn new_priv(poll: &Poll, token: Token, interest: Ready, opt: PollOpt)$/;"	f
new_registration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub fn new_registration(poll: &Poll, token: Token, ready: Ready, opt: PollOpt)$/;"	f
next	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn next(&mut self) -> Option<Event> {$/;"	f
next_tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn next_tick(&self) -> Option<Tick> {$/;"	f
next_token_pos	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn next_token_pos(&self) -> usize {$/;"	f
no_notify_on_instant_completion	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^unsafe fn no_notify_on_instant_completion(handle: winapi::HANDLE) -> io::Result<()> {$/;"	f
no_send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/lib.rs	/^mod no_send;$/;"	m
nodelay	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	f
nodelay	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	f
nodelay	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	f
none	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn none() -> Ready {$/;"	f
not	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn not(self) -> PollOpt {$/;"	f
not	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn not(self) -> Ready {$/;"	f
not	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn not(self) -> UnixReady {$/;"	f
notify	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn notify(&mut self, handler: &mut H) {$/;"	f
notify	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    fn notify(&mut self, event_loop: &mut EventLoop<Self>, msg: Self::Message) {$/;"	f
notify	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/mod.rs	/^mod notify;$/;"	m
notify_capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn notify_capacity(&mut self, capacity: usize) -> &mut Self {$/;"	f
num_slots	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn num_slots(mut self, num_slots: usize) -> Builder {$/;"	f
number_generator	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn number_generator() {$/;"	f
offset_of	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^macro_rules! offset_of {$/;"	d
oneshot	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn oneshot() -> PollOpt {$/;"	f
only_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn only_v6(&self) -> io::Result<bool> {$/;"	f
only_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn only_v6(&self) -> io::Result<bool> {$/;"	f
only_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn only_v6(&self) -> io::Result<bool> {$/;"	f
ontop_fcontext	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn ontop_fcontext(to: &'static c_void, p: usize, f: ResumeOntopFn) -> Transfer;$/;"	f
ops::BitAnd for PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl ops::BitAnd for PollOpt {$/;"	i
ops::BitAnd for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::BitAnd for UnixReady {$/;"	i
ops::BitOr for PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl ops::BitOr for PollOpt {$/;"	i
ops::BitOr for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::BitOr for UnixReady {$/;"	i
ops::BitXor for PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl ops::BitXor for PollOpt {$/;"	i
ops::BitXor for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::BitXor for UnixReady {$/;"	i
ops::Deref for IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl ops::Deref for IoVec {$/;"	i
ops::Deref for RegistrationInner	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^impl ops::Deref for RegistrationInner {$/;"	i
ops::Deref for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::Deref for UnixReady {$/;"	i
ops::DerefMut for IoVec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^impl ops::DerefMut for IoVec {$/;"	i
ops::DerefMut for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::DerefMut for UnixReady {$/;"	i
ops::Not for PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl ops::Not for PollOpt {$/;"	i
ops::Not for Ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl ops::Not for Ready {$/;"	i
ops::Not for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::Not for UnixReady {$/;"	i
ops::Sub for PollOpt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^impl ops::Sub for PollOpt {$/;"	i
ops::Sub for UnixReady	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^impl ops::Sub for UnixReady {$/;"	i
opt_as_usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub fn opt_as_usize(opt: PollOpt) -> usize {$/;"	f
opt_from_usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub fn opt_from_usize(opt: usize) -> PollOpt {$/;"	f
other	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^fn other(s: &str) -> io::Error {$/;"	f
overflow	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn overflow() -> TimerError {$/;"	f
overlapped2arc	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^macro_rules! overlapped2arc {$/;"	d
page_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^pub fn page_size() -> usize {$/;"	f
page_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^pub fn page_size() -> usize {$/;"	f
peer_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	f
peer_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	f
peer_addr	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	f
pipe	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^pub fn pipe() -> io::Result<(PipeReader, PipeWriter)> {$/;"	f
pipe	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^mod pipe {$/;"	m
pipe	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^pub fn pipe() -> ::io::Result<(Io, Io)> {$/;"	f
poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^mod poll;$/;"	m
poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn poll(&self, dst: &mut sys::Events) {$/;"	f
poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn poll(&self, events: &mut Events, mut timeout: Option<Duration>) -> io::Result<usize> {$/;"	f
poll	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn poll(&mut self) -> Option<T> {$/;"	f
poll2	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn poll2(&self, events: &mut Events, timeout: Option<Duration>) -> io::Result<usize> {$/;"	f
poll_opt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn poll_opt(&self) -> PollOpt {$/;"	f
poll_to	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn poll_to(&mut self, mut target_tick: Tick) -> Option<T> {$/;"	f
port	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn port(&self) -> &CompletionPort {$/;"	f
post_register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn post_register(&self, interest: Ready, me: &mut StreamInner) {$/;"	f
post_register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn post_register(&self, interest: Ready, me: &mut Inner) {$/;"	f
prepare_for_sleep	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn prepare_for_sleep(&self) -> bool {$/;"	f
protect_stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/unix/mod.rs	/^pub fn protect_stack(stack: &Stack) -> io::Result<Stack> {$/;"	f
protect_stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/windows/mod.rs	/^pub fn protect_stack(stack: &Stack) -> io::Result<Stack> {$/;"	f
push_event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn push_event(&mut self, event: Event) {$/;"	f
push_event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn push_event(&mut self, event: Event) {$/;"	f
push_event	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn push_event(&mut self, event: Event) {$/;"	f
put	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/buffer_pool.rs	/^    pub fn put(&mut self, mut buf: Vec<u8>) {$/;"	f
put_buffer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn put_buffer(&self, buf: Vec<u8>) {$/;"	f
read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read_bufs	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn read_bufs(&self, bufs: &mut [&mut IoVec]) -> io::Result<usize> {$/;"	f
read_done	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^fn read_done(status: &OVERLAPPED_ENTRY) {$/;"	f
read_recv_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn read_recv_fd(&mut self, buf: &mut [u8]) -> io::Result<(usize, Option<RawFd>)> {$/;"	f
read_recv_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn read_recv_fd(&mut self, buf: &mut [u8]) -> io::Result<(usize, Option<RawFd>)> {$/;"	f
readable	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn readable() -> Ready {$/;"	f
reader	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        fn reader(&self) -> &unix::Io {$/;"	f
readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn readiness(&self) -> Ready {$/;"	f
readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn readiness(&self) -> Ready {$/;"	f
readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn readiness(&self) -> Ready {$/;"	f
readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn readiness(&self) -> Ready {$/;"	f
readv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn readv(&self, bufs: &mut [&mut IoVec]) -> io::Result<usize> {$/;"	f
readv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn readv(&self, bufs: &mut [&mut IoVec]) -> io::Result<usize> {$/;"	f
ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    fn ready(&mut self, event_loop: &mut EventLoop<Self>, token: Token, events: Ready) {$/;"	f
ready	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod ready;$/;"	m
ready_as_usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub fn ready_as_usize(events: Ready) -> usize {$/;"	f
ready_from_usize	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^pub fn ready_from_usize(events: usize) -> Ready {$/;"	f
recv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
recv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
recv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn recv(&self, mut buf: &mut [u8])$/;"	f
recv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn recv(&self, buf: &mut [u8])$/;"	f
recv_done	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^fn recv_done(status: &OVERLAPPED_ENTRY) {$/;"	f
recv_from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	f
recv_from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	f
recv_from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn recv_from(&self, mut buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	f
recv_from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn recv_from(&self, buf: &mut [u8])$/;"	f
ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^    static ref COUNT: usize = HASHMAP.len();$/;"	c
ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^    static ref EXAMPLE: u8 = 42;$/;"	c
ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^    static ref HASHMAP: HashMap<u32, &'static str> = {$/;"	c
ref	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^    static ref NUMBER: u32 = times_two(21);$/;"	c
ref	/home/dpc/lab/rust/miofib/src/lib.rs	/^    static ref MIOFIB: Miofib = {$/;"	c
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn register<E: ?Sized>(&mut self, io: &E, token: Token, interest: Ready, opt: PollOpt) -> io::Result<()>$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()>;$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn register(&self, poll: &Poll, token: Token,$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn register<E: ?Sized>(&self, handle: &E, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()>$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn register(&self, fd: RawFd, token: Token, interests: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/eventedfd.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn register(&self, fd: RawFd, token: Token, interests: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn register(&self, poll: &Poll, token: Token,$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^    fn register(&self, poll: &Poll, token: Token, events: Ready,$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn register(&self, poll: &Poll, token: Token,$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn register(&self, poll: &Poll, token: Token,$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    fn register(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
register_handle	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub unsafe fn register_handle(&self,$/;"	f
register_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn register_socket(&mut self,$/;"	f
register_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub unsafe fn register_socket(&self,$/;"	f
registered	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn registered(&self) -> bool {$/;"	f
release_node	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^fn release_node(ptr: *mut ReadinessNode) {$/;"	f
remove	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn remove(&mut self, other: PollOpt) {$/;"	f
remove	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn remove<T: Into<Self>>(&mut self, other: T) {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn reregister<E: ?Sized>(&mut self, io: &E, token: Token, interest: Ready, opt: PollOpt) -> io::Result<()>$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()>;$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn reregister(&self, poll: &Poll, token: Token,$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn reregister<E: ?Sized>(&self, handle: &E, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()>$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn reregister(&self, fd: RawFd, token: Token, interests: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/eventedfd.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn reregister(&self, fd: RawFd, token: Token, interests: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn reregister(&self, poll: &Poll, token: Token,$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^    fn reregister(&self, poll: &Poll, token: Token, events: Ready,$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn reregister(&self, poll: &Poll, token: Token,$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn reregister(&self, poll: &Poll, token: Token,$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    fn reregister(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
reregister_handle	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub unsafe fn reregister_handle(&self,$/;"	f
reregister_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn reregister_socket(&mut self,$/;"	f
reregister_socket	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub unsafe fn reregister_socket(&self,$/;"	f
resume	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^        extern "C" fn resume(t: Transfer) -> ! {$/;"	f
resume	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    pub fn resume(self, data: usize) -> Transfer {$/;"	f
resume_ontop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^        extern "C" fn resume_ontop(mut t: Transfer) -> Transfer {$/;"	f
resume_ontop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn resume_ontop() {$/;"	f
resume_ontop	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    pub fn resume_ontop(self, data: usize, f: ResumeOntopFn) -> Transfer {$/;"	f
run	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn run(&mut self, handler: &mut H) -> io::Result<()> {$/;"	f
run	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn run(&self) {}$/;"	f
run_once	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn run_once(&mut self, handler: &mut H, timeout: Option<Duration>) -> io::Result<()> {$/;"	f
schedule_accept	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn schedule_accept(&self, me: &mut ListenerInner) {$/;"	f
schedule_connect	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn schedule_connect(&self, addr: &SocketAddr) -> io::Result<()> {$/;"	f
schedule_read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn schedule_read(&self, me: &mut StreamInner) {$/;"	f
schedule_read_from	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    fn schedule_read_from(&self, me: &mut Inner) {$/;"	f
schedule_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn schedule_readiness(&self, tick: Tick) {$/;"	f
schedule_write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    fn schedule_write(&self,$/;"	f
select	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn select(&self, evts: &mut Events, awakener: Token, timeout: Option<Duration>) -> io::Result<bool> {$/;"	f
select	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn select(&self, evts: &mut Events, awakener: Token, timeout: Option<Duration>) -> io::Result<bool> {$/;"	f
select	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn select(&self,$/;"	f
selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^pub fn selector(poll: &Poll) -> &sys::Selector {$/;"	f
selector	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^mod selector;$/;"	m
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/lib.rs	/^mod send;$/;"	m
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn send<Result, F>(func: F) -> Result$/;"	f
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    pub fn send(&self, t: T) -> Result<(), SendError<T>> {$/;"	f
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn send(&self, msg: M) -> Result<(), NotifyError<M>> {$/;"	f
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	f
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	f
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	f
send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn send(&self, buf: &[u8])$/;"	f
send	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn send(&self, msg : LoopMsg) {$/;"	f
send_done	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^fn send_done(status: &OVERLAPPED_ENTRY) {$/;"	f
send_to	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn send_to(&self, buf: &[u8], target: &SocketAddr) -> io::Result<usize> {$/;"	f
send_to	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn send_to(&self, buf: &[u8], target: &SocketAddr) -> io::Result<usize> {$/;"	f
send_to	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn send_to(&self, buf: &[u8], target: &SocketAddr)$/;"	f
send_to	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn send_to(&self, buf: &[u8], target: &SocketAddr)$/;"	f
set	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set(&mut self, val: usize, mask: usize, shift: usize) {$/;"	f
set_broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	f
set_broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	f
set_broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	f
set_broadcast	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	f
set_cloexec	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^pub fn set_cloexec(fd: libc::c_int) -> io::Result<()> {$/;"	f
set_dequeued	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_dequeued(&mut self) {$/;"	f
set_interest	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_interest(&mut self, v: Ready) {$/;"	f
set_keepalive_ms	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn set_keepalive_ms(&self, keepalive: Option<u32>) -> io::Result<()> {$/;"	f
set_keepalive_ms	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn set_keepalive_ms(&self, millis: Option<u32>) -> io::Result<()> {$/;"	f
set_keepalive_ms	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn set_keepalive_ms(&self, millis: Option<u32>) -> io::Result<()> {$/;"	f
set_multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_loop_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	f
set_multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_multicast_ttl_v4	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_nodelay	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	f
set_nodelay	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	f
set_nodelay	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	f
set_nonblock	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^pub fn set_nonblock(fd: libc::c_int) -> io::Result<()> {$/;"	f
set_only_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn set_only_v6(&self, only_v6: bool) -> io::Result<()> {$/;"	f
set_only_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn set_only_v6(&self, only_v6: bool) -> io::Result<()> {$/;"	f
set_only_v6	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn set_only_v6(&self, only_v6: bool) -> io::Result<()> {$/;"	f
set_poll_opt	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_poll_opt(&mut self, v: PollOpt) {$/;"	f
set_queued	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_queued(&mut self) {$/;"	f
set_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_readiness(&mut self, v: Ready) {$/;"	f
set_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_readiness(&self, ready: Ready) -> io::Result<()> {$/;"	f
set_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn set_readiness(&self, ready: Ready) -> io::Result<()> {$/;"	f
set_readiness	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn set_readiness(&self, set: Ready) {$/;"	f
set_timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn set_timeout(&mut self, delay_from_now: Duration, state: T) -> Result<Timeout> {$/;"	f
set_timeout_at	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn set_timeout_at(&mut self, delay_from_start: Duration, state: T) -> Result<Timeout> {$/;"	f
set_token_write_pos	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn set_token_write_pos(&mut self, val: usize) {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
set_ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	f
shutdown	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn shutdown(&mut self) {$/;"	f
shutdown	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<usize> {$/;"	f
shutdown	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	f
shutdown	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn shutdown(&self, how: net::Shutdown) -> io::Result<()> {$/;"	f
shutdown	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	f
shutdown	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	f
sleep_marker	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn sleep_marker(&self) -> *mut ReadinessNode {$/;"	f
slot_for	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn slot_for(&self, tick: Tick) -> usize {$/;"	f
smoke	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^    fn smoke() {$/;"	f
sockaddr_un	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^unsafe fn sockaddr_un(path: &Path)$/;"	f
spawn	/home/dpc/lab/rust/miofib/src/lib.rs	/^    fn spawn<F, T>(&self, f: F)$/;"	f
spawn	/home/dpc/lab/rust/miofib/src/lib.rs	/^pub fn spawn<F, T>(f: F)$/;"	f
spawn_wakeup_thread	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^fn spawn_wakeup_thread(state: WakeupState, set_readiness: SetReadiness, start: Instant, tick_ms: u64) -> thread::JoinHandle<()> {$/;"	f
stack	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/lib.rs	/^pub mod stack;$/;"	m
stack_alignment	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn stack_alignment() {$/;"	f
stack_size_too_large	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn stack_size_too_large() {$/;"	f
stack_size_too_small	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    fn stack_size_too_small() {$/;"	f
stream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn stream() -> io::Result<UnixSocket> {$/;"	f
stream	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn stream() -> io::Result<UnixSocket> {$/;"	f
sub	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn sub(self, other: PollOpt) -> PollOpt {$/;"	f
sub	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    fn sub(self, other: T) -> Ready {$/;"	f
sub	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/ready.rs	/^    fn sub(self, other: UnixReady) -> UnixReady {$/;"	f
sun_path_offset	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^fn sun_path_offset() -> usize {$/;"	f
sync_channel	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^pub fn sync_channel<T>(bound: usize) -> (SyncSender<T>, Receiver<T>) {$/;"	f
sys	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/lib.rs	/^mod sys;$/;"	m
sys	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^mod sys;$/;"	m
sys	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^mod sys;$/;"	m
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
take_error	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	f
tcp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod tcp {$/;"	m
tcp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/mod.rs	/^mod tcp;$/;"	m
tcp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod tcp;$/;"	m
tcp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^mod tcp;$/;"	m
test	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^mod test {$/;"	m
test	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^mod test {$/;"	m
test	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^mod test {$/;"	m
test_arg0	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg0() {$/;"	f
test_arg0	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg0() {$/;"	f
test_arg1	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg1() {$/;"	f
test_arg1	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg1() {$/;"	f
test_arg1_fixed_argument_type	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg1_fixed_argument_type() {$/;"	f
test_arg1_fixed_argument_type	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg1_fixed_argument_type() {$/;"	f
test_arg2	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg2() {$/;"	f
test_arg2	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg2() {$/;"	f
test_arg3	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg3() {$/;"	f
test_arg3	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg3() {$/;"	f
test_arg4_diverging	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg4_diverging() {$/;"	f
test_arg4_diverging	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg4_diverging() {$/;"	f
test_arg4_void	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/no_send.rs	/^	fn test_arg4_void() {$/;"	f
test_arg4_void	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn test_arg4_void() {$/;"	f
tests	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^mod tests {$/;"	m
tests	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^mod tests {$/;"	m
tests	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/from_raw_arc.rs	/^mod tests {$/;"	m
tests	/home/dpc/lab/rust/miofib/src/lib.rs	/^mod tests {$/;"	m
tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    fn tick(&mut self, event_loop: &mut EventLoop<Self>) {$/;"	f
tick_duration	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    pub fn tick_duration(mut self, duration: Duration) -> Builder {$/;"	f
timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn timeout(&mut self, token: H::Timeout, delay: Duration) -> timer::Result<Timeout> {$/;"	f
timeout	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/handler.rs	/^    fn timeout(&mut self, event_loop: &mut EventLoop<Self>, timeout: Self::Timeout) {$/;"	f
timer	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod timer;$/;"	m
timer_capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn timer_capacity(&mut self, cap: usize) -> &mut Self {$/;"	f
timer_process	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    fn timer_process(&mut self, handler: &mut H) {$/;"	f
timer_tick	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn timer_tick(&mut self, val: Duration) -> &mut Self {$/;"	f
timer_wheel_size	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/event_loop.rs	/^    pub fn timer_wheel_size(&mut self, size: usize) -> &mut Self {$/;"	f
times_two	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-0.2.6/src/lib.rs	/^fn times_two(n: u32) -> u32 { n * 2 }$/;"	f
token	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn token(&self) -> Token {$/;"	f
token	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^mod token;$/;"	m
token	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^unsafe fn token(node: &ReadinessNode, pos: usize) -> Token {$/;"	f
token_read_pos	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn token_read_pos(&self) -> usize {$/;"	f
token_write_pos	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn token_write_pos(&self) -> usize {$/;"	f
top	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/stack.rs	/^    pub fn top(&self) -> *mut c_void {$/;"	f
traits	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/lib.rs	/^mod traits;$/;"	m
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn try_clone(&self) -> io::Result<UnixListener> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn try_clone(&self) -> io::Result<UnixSocket> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn try_clone(&self) -> io::Result<UnixStream> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn try_clone(&self) -> io::Result<TcpListener> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn try_clone(&self) -> io::Result<TcpStream> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn try_clone(&self) -> io::Result<UdpSocket> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    pub fn try_clone(&self) -> io::Result<Io> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn try_clone(&self) -> io::Result<TcpListener> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn try_clone(&self) -> io::Result<TcpStream> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn try_clone(&self) -> io::Result<UdpSocket> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn try_clone(&self) -> io::Result<UnixSocket> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn try_clone(&self) -> io::Result<TcpListener> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn try_clone(&self) -> io::Result<TcpStream> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn try_clone(&self) -> io::Result<UdpSocket> {$/;"	f
try_clone	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn try_clone(&self) -> io::Result<UdpSocket> {$/;"	f
try_read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^    fn try_read(&mut self, buf: &mut [u8]) -> io::Result<Option<usize>>;$/;"	f
try_read	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^    fn try_read(&mut self, dst: &mut [u8]) -> io::Result<Option<usize>> {$/;"	f
try_read_recv_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn try_read_recv_fd(&mut self, buf: &mut [u8]) -> io::Result<Option<(usize, Option<RawFd>)>> {$/;"	f
try_recv	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    pub fn try_recv(&self) -> Result<T, mpsc::TryRecvError> {$/;"	f
try_send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/boxfnonce-0.0.3/src/send.rs	/^	fn try_send<Result, F>(name: &str, func: F) -> thread::Result<Result>$/;"	f
try_send	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/channel.rs	/^    pub fn try_send(&self, t: T) -> Result<(), TrySendError<T>> {$/;"	f
try_write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^    fn try_write(&mut self, buf: &[u8]) -> io::Result<Option<usize>>;$/;"	f
try_write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/io.rs	/^    fn try_write(&mut self, src: &[u8]) -> io::Result<Option<usize>> {$/;"	f
try_write_send_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn try_write_send_fd(&mut self, buf: &[u8], fd: RawFd) -> io::Result<Option<usize>> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/udp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/udp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
ttl	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/udp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	f
type_sizes	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^    fn type_sizes() {$/;"	f
u8x16	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/context.rs	/^        struct u8x16(u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8);$/;"	s
udp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod udp;$/;"	m
udp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/mod.rs	/^mod udp;$/;"	m
udp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod udp;$/;"	m
udp	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^mod udp;$/;"	m
uds	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/mod.rs	/^mod uds;$/;"	m
unix	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/mod.rs	/^mod unix;$/;"	m
unix	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/lib.rs	/^pub mod unix;$/;"	m
unix	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/mod.rs	/^mod unix;$/;"	m
unix	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/mod.rs	/^pub mod unix;$/;"	m
unix	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod unix {$/;"	m
unix	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/mod.rs	/^pub mod unix;$/;"	m
unlink	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/timer.rs	/^    fn unlink(&mut self, links: &EntryLinks, token: Token) {$/;"	f
update	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn update(&self, poll: &Poll, token: Token, interest: Ready, opt: PollOpt) -> io::Result<()> {$/;"	f
update	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn update(&self, poll: &Poll, token: Token, interest: Ready, opts: PollOpt) -> io::Result<()> {$/;"	f
update_token_read_pos	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn update_token_read_pos(&mut self) {$/;"	f
urgent	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn urgent() -> PollOpt {$/;"	f
validate_args	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^fn validate_args(token: Token, interest: Ready) -> io::Result<()> {$/;"	f
wakeup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    fn wakeup(&self) -> io::Result<()> {$/;"	f
wakeup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/awakener.rs	/^        pub fn wakeup(&self) -> io::Result<()> {$/;"	f
wakeup	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/awakener.rs	/^    pub fn wakeup(&self) -> io::Result<()> {$/;"	f
windows	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/context-1.0.0/src/sys/mod.rs	/^mod windows;$/;"	m
windows	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/mod.rs	/^mod windows;$/;"	m
windows	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/lib.rs	/^pub mod windows {$/;"	m
windows	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/mod.rs	/^mod windows;$/;"	m
with_capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/poll.rs	/^    pub fn with_capacity(capacity: usize) -> Events {$/;"	f
with_capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/epoll.rs	/^    pub fn with_capacity(u: usize) -> Events {$/;"	f
with_capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/kqueue.rs	/^    pub fn with_capacity(cap: usize) -> Events {$/;"	f
with_capacity	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/selector.rs	/^    pub fn with_capacity(cap: usize) -> Events {$/;"	f
would_block	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/io.rs	/^    pub fn would_block() -> ::std::io::Error {$/;"	f
would_block	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^pub fn would_block() -> ::std::io::Error {$/;"	f
would_block	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/udp.rs	/^pub fn would_block() -> ::std::io::Error {$/;"	f
wouldblock	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/mod.rs	/^fn wouldblock() -> io::Error {$/;"	f
writable	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/event_imp.rs	/^    pub fn writable() -> Ready {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/io.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_bufs	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/net/tcp.rs	/^    pub fn write_bufs(&self, bufs: &[&IoVec]) -> io::Result<usize> {$/;"	f
write_done	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^fn write_done(status: &OVERLAPPED_ENTRY) {$/;"	f
write_send_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/deprecated/unix.rs	/^    pub fn write_send_fd(&mut self, buf: &[u8], fd: RawFd) -> io::Result<usize> {$/;"	f
write_send_fd	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/uds.rs	/^    pub fn write_send_fd(&mut self, buf: &[u8], fd: RawFd) -> io::Result<usize> {$/;"	f
writev	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/unix/tcp.rs	/^    pub fn writev(&self, bufs: &[&IoVec]) -> io::Result<usize> {$/;"	f
writev	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.6.6/src/sys/windows/tcp.rs	/^    pub fn writev(&self, bufs: &[&IoVec]) -> io::Result<usize> {$/;"	f
wsabuf	/home/dpc/.cargo/registry/src/github.com-1ecc6299db9ec823/iovec-0.1.0/src/sys/windows.rs	/^    unsafe fn wsabuf(&self) -> WSABUF {$/;"	f
